# Default values for sigscale.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

controller:
  kind: StatefulSet
  name: "ocs" #ocs 
  spec:
    serviceName: "OTP"
    replicaCount: 3
    terminationGracePeriodSeconds : 30
    fsGroup: 1000
    
  initContainers:
    name: "ocs-init"
    image: sigscale/ocs
    stdin: true
    tty: true
    command:
    - bash
      - "-c"
      - |
        set -e
        [[ `hostname --fqdn` =~ (^.*)-([0-9]+)?.(.*)$ ]] || exit 1
        hostbase=${BASH_REMATCH[1]}
        ordinal=${BASH_REMATCH[2]}
        domain=${BASH_REMATCH[3]}
        if [[ ${ordinal} -eq 0 ]]; then
          bin/initialize
        else
          bin/join ocs@${hostbase}-$((--ordinal)).${domain}
        fi 
    ports:
    - name: epmd
      protocol: TCP
      containerPort: 4369
    - name: erl-rpc
      protocol: TCP
      containerPort: 54861
    volumeMounts:
      name: ocs-data
      mountPath: /home/otp/db
  containers:
    name: "ocs"
    image: sigscale/ocs
    stdin: true
    tty: true
    ports:
    volumeMounts:
      name: ocs-data
      mountPath: /home/otp/db
    
  component: "ocs-node"


  envs:
    name: ERLANG_COOKIE
    valueFrom:
      secretKeyRef:
        name: otp-dist
        key: ERLANG_COOKIE
          
  ports:
    - name: epmd
      protocol: TCP
      containerPort: 4369
    - name: erl-rpc
      protocol: TCP
      containerPort: 54861
    - name: diameter-acct
      protocol: TCP
      containerPort: 3868
    - name: diameter-auth
      protocol: TCP
      containerPort: 3869
    - name: radius-auth
      protocol: UDP
      containerPort: 1812
    - name: radius-acct
      protocol: UDP
      containerPort: 1813
    - name: rest
      protocol: TCP
      containerPort: 8080
    - name: snmp
      protocol: UDP
      containerPort: 4161

  pod:
    ## The annotations of the Ingress Controller pod.
    annotations: {}

  serviceAccount:
    ## The name of the service account of the Ingress controller pods. Used for RBAC.
    ## Autogenerated if not set or set to "".
    # name: nginx-ingress

  ## The name of the secret containing docker registry credentials.
  ## Secret must exist in the same namespace as the helm release.
  imagePullSecretName: ""

  readyStatus:
    ## Enables readiness endpoint "/nginx-ready". The endpoint returns a success code when NGINX has loaded all the config after startup.
    readinessProbe:
      httpGet:
        httpHeaders:
          - name: Accept
            value: application/health+json
          - name: Authorization
            value: Basic YWRtaW46YWRtaW4=
        path: /health
        port: rest
      initialDelaySeconds: 5
      timeoutSeconds: 5
      periodSeconds: 10
      failureThreshold: 6
    ## Set the port wher  e the readiness endpoint is exposed.
    # port: 8081

  secret: 
    name: otp-dist
    type: Opaque
    ERLANG_COOKIE: SllGWFJZQkhPV0lNWVlLQUlITkI=

  service:
    ## Creates a service to expose the Ingress controller pods.
    create: true

    ## The type of service to create for the Ingress controller.
    type: NodePort
    port: 80
    type: NodePort

    httpPort:
      ## Enables the HTTP port for the Ingress controller service.
      enable: true

      ## The HTTP port of the Ingress controller service.
      port: 80

      ## The custom NodePort for the HTTP port. Requires controller.service.type set to NodePort.
      nodePort: ""

      ## The HTTP port on the POD where the Ingress controller service is running.
      targetPort: 80

    httpsPort:
      ## Enables the HTTPS port for the Ingress controller service.
      enable: true

      ## The HTTPS port of the Ingress controller service.
      port: 443

      ## The custom NodePort for the HTTPS port. Requires controller.service.type set to NodePort.
      nodePort: ""

      ## The HTTPS port on the POD where the Ingress controller service is running.
      targetPort: 443

  persistence:
    enabled: true
    name: ocs-data
    # storageClass: ssd
    accessMode:  [ "ReadWriteOnce" ]
    size: 10Gi
  
prometheus:
  ## Expose NGINX or NGINX Plus metrics in the Prometheus format.
  create: false
